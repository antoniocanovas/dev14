<odoo>
    <record id="wup_sol_update_general" model="base.automation">
            <field name="name">=> Update SOL from WUP</field>
            <field name="model_id" ref="sale.model_sale_order_line"/>
            <field name="state">code</field>
            <field name="code">
# Change default behaviour when change QYT on SOL with WUP, and update purchase_price on SOL:
if record.wup_line_ids.ids:
    wup_price_unit = 0
    for li in record.wup_line_ids:
        wup_price_unit += li.price_unit * li.product_uom_qty

    if not (record.wup_line_note_id.id) and (record.wup_template_id.id) and (record.wup_template_id.description):
        # Create a line note from wup template description:
        new_note = env['sale.order.line'].create({'sequence':record.sequence, 'name':record.wup_template_id.description, 'display_type':'line_note', 'order_id':record.order_id.id})
        record.write({'price_unit':wup_price_unit, 'purchase_price':record.wup_cost_amount, 'wup_line_note_id':new_note.id})
    else:
        record.write({'price_unit':wup_price_unit, 'purchase_price':record.wup_cost_amount})

            </field>
            <field name="trigger">on_write</field>
            <field name="filter_pre_domain"></field>
            <field name="filter_domain"></field>
            <field name="active" eval="True"/>
        </record>

        <record id="so_wup_tasks" model="base.automation">
            <field name="name">=>SO WUP Tasks</field>
            <field name="model_id" ref="sale.model_sale_order"/>
            <field name="state">code</field>
            <field name="code">
# Task creation of service products in wup.line:
if (record.state == 'sale'):
  wuplines = env['wup.line'].search([('sale_id','=',record.id),('product_id.service_tracking','=','task_in_project'),('task_id','=',False)])
  if (wuplines.ids) and not (record.project_id.id):
    newproject = env['project.project'].create({'name':record.name, 'partner_id':record.partner_id.id,
      'sale_order_id':record.id, 'allow_timesheets':True, 'allow_billable':True})
    record.write({'project_id':newproject.id, 'visible_project':True, 'analytic_account_id':newproject.analytic_account_id.id})
  for li in wuplines:
    # sale_line_id in task not working for 'consu' and 'product':
    sale_line = False
    if li.sale_line_id.product_id.type in ['service']: sale_line = li.sale_line_id.id

    name = li.sale_line_id.name + ".- " + li.name
    newtask = env['project.task'].create({'name':name, 'sale_line_id':sale_line ,'sale_order_id':record.id,
      'project_id': record.project_id.id, 'planned_hours':li.product_uom_qty, 'wup_line_id':li.id})
    li['task_id'] = newtask.id
            </field>
            <field name="trigger">on_create_or_write</field>
            <!--<field name="on_change_fields">state</field>-->
            <field name="filter_pre_domain">[('state','=','sale')]</field>
            <field name="filter_domain">[('state','=','sale')]</field>
            <field name="active" eval="True"/>
        </record>


</odoo>
