<?xml version="1.0" encoding="utf-8" ?>
<odoo>
    <data>

        <record id="scrap_set_unbuild" model="ir.actions.server">
            <field name="name">=> Scrap Wizard Set Unbuild</field>
            <field name="model_id" ref="model_scrap_unbuild_wizard"/>
            <field name="state">code</field>
            <field name="code">
# Crea la CLASIFICACIÓN y desglose de productos en la ubicación del producto padre:
newsi = False
rootcode = record.product_tmpl_id.default_code[:6]
location = env['stock.location'].search([('name','=',rootcode)])
rootpt = env['product.template'].search([('default_code','=',rootcode)])
if not rootpt.id or not location.id:
  raise Warning('Revisa los códigos de los productos padre anidados, no encuentro el raiz con los 6 primeros dígitos; o la localizacón de almacén con este código.')

# STOCK INVENTORY Creation:
units = 0
for li in record.line_ids: units += li.qty
if units &gt; 0:
  name = record.name + " " + rootpt.default_code
  newsi = env['stock.inventory'].create({'name':name, 'unbuild_product_tmpl_id':record.product_tmpl_id.id})
else:
  raise Warning('No hay productos nuevos que crear en: ' + record.name)


# NEW PRODUCTS AND STOCK INVENTORY LINES CREATION:
for li in record.line_ids:
  codesub = str(rootpt.unbuild_sequence + 1001)[-3:]

  # PARA NUEVOS PRODUCTOS:
  if (li.qty > 0) and not (li.part_id.product_id.id):
    newproduct = env['product.template'].create({'name':li.name,
      'categ_id':li.part_id.category_id.id, 'unbuild_type':'subproduct',
      'sale_ok':True, 'purchase_ok':False, 'type':'product', 'parent_id':rootpt.id, 'default_code':rootcode + codesub,
      'income_analytic_account_id':rootpt.income_analytic_account_id.id , 'expense_analytic_account_id':rootpt.expense_analytic_account_id.id,
      'unbuild_location_id':rootpt.unbuild_location_id.id,
      'standard_price':li.standard_price})
    rootpt['unbuild_sequence'] = rootpt.unbuild_sequence +1
    newproductproduct = env['product.product'].search([('product_tmpl_id','=',newproduct.id)])

    newsil = env['stock.inventory.line'].create({'inventory_id':newsi.id, 'location_id':location.id, 'product_id':newproductproduct.id,
      'product_qty':li.qty, 'unbuild_unit_value':li.standard_price})

  # PARA PRODUCTOS GENÉRICOS:
  elif (li.qty &gt; 0) and (li.part_id.product_id.id):
    qty = li.qty
    sq = env['stock.quant'].search([('product_id','=',li.part_id.product_id.id),('location_id','=',location.id)])
    if sq.id: qty += sq.quantity
    newsil = env['stock.inventory.line'].create({'inventory_id':newsi.id, 'location_id':location.id, 'product_id':li.part_id.product_id.id,
        'product_qty':qty, 'unbuild_unit_value':li.standard_price})

newsi.action_start()
if (record.autovalidate == True):
  newsi.action_validate()

            </field>
        </record>

    </data>

    <record id="update_unbuild_parent_product_value_aa" model="base.automation">
            <field name="name">=> Update unbuild parent product value</field>
            <field name="model_id" ref="model_stock_inventory"/>
            <field name="state">code</field>
            <field name="code">
record.update_unbuild_parent_product_value()
            </field>
            <field name="trigger">on_write</field>
            <field name="on_change_field_ids" eval="[(6,0, [ref('stock.field_stock_inventory__state')])]"/>
            <field name="filter_pre_domain"></field>
            <field name="filter_domain"></field>
            <field name="active" eval="True"/>
    </record>



    <record id="change_unbuild_set_parts_wizard" model="base.automation">
            <field name="name">=> Change SET unbuild parts on scrap wizard</field>
            <field name="model_id" ref="model_scrap_unbuild_wizard"/>
            <field name="state">code</field>
            <field name="code">
# CODE:
record.line_ids.unlink()
for part in record.unbuild_set_id.line_ids:
  newline = env['unbuild.product.line.wizard'].create({'part_id':part.part_id.id, 'qty':part.qty, 'name':part.part_id.name, 'product_tmpl_id':record.product_tmpl_id.id})
  record['line_ids'] = [(4,newline.id)]
            </field>
            <field name="trigger">on_change</field>
            <field name="on_change_field_ids" eval="[(6,0, [ref('scrap_unbuild.field_scrap_unbuild_wizard__unbuild_set_id')])]"/>
            <field name="filter_pre_domain"></field>
            <field name="filter_domain"></field>
            <field name="active" eval="True"/>
    </record>

</odoo>
